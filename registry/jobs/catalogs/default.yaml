spec: v1.0
desc: Default catalog for working with GitHub Pages.
extends:
  - _common.yaml
  - _gemfile.yaml

dataset:
  - const: src
    desc: Dir where the source templates are.
    tags: [hidden]
    value: $(__dir)/_$(__catalogName)
  
  - const: dst
    desc: Local directory where to save the files.
    value: $(workDir)

  - const: dataQ
    desc: Questions for the creation of a data file.
    tags: [hidden, questions]
    value:
      - $(websiteDir)
      - input: fileName
        title: File name (w/o extension)
  
  - const: frontMatterQ
    desc: Questions for building a front matter.
    tags: [hidden, questions]
    value:
      - input: title
      - input: layout
      - input: permalink
  
  - const: pageQ
    desc: Questions for building a content page.
    tags: [hidden, questions]
    prepend:
      - $(websiteDir)
      - input: pageDir
        title: Directory where to create the page in website dir
        defaultValue: /
      - input: fileName
        title: File name (w/ extension)
    value: $(frontMatterQ)
  
  - const: dockerQ
    desc: Questions for returning a command line for running Jekyll w/ Docker.
    tags: [hidden, questions]
    value:
      - input: container
        defaultValue: jekyll
      - select: image
        options: [jekyll/jekyll:pages, jekyll/jekyll:latest]
        defaultValue: jekyll/jekyll:pages
  
  - const: torQ
    desc: Questions for returning what to do for configuring a Tor service.
    tags: [hidden, questions]
    value:
      - input: host
        title: Host where the service is listening
        defaultValue: localhost
      - input: port
        title: Port number where the service is listening
        defaultValue: 4000
      - input: torServiceName
        defaultValue: jekyll
      - input: torServicePort
        title: Local port number where the Tor service will listen
        defaultValue: 80

jobs:
  - macro: data
    title: Create a data file
    ini:
      - quiet: $answers = inquire $(dataQ) $(answers)
    dataset: [item, content]
    steps:
      - fs.createDir $(dst)/$(answers.websiteDir)/_data

      - quiet: $item = cr.getItem $(src)/_data/file.yaml.hbs
      - quiet: $content = hbs.render $(item.value) $(answers)
      - file.write $(content) $(dst)/$(answers.websiteDir)/_data/$(answers.fileName).yaml
  
  - macro: front-matter
    title: Build a front matter
    ini:
      - quiet: $answers = inquire $(frontMatterQ) $(answers)
    dataset: [item, content]
    steps:
      - quiet: $item = cr.getItem $(src)/frontMatter.hbs
      - log: hbs.render $(item.value) $(answers)

  - macro: page
    title: Create a content page
    ini:
      - quiet: $answers = inquire $(pageQ) $(answers)
    dataset: [item, content]
    steps:
      - fs.createDir $(dst)/$(answers.websiteDir)/$(answers.pageDir)

      - quiet: $item = cr.getItem $(src)/page.hbs
      - quiet: $content = hbs.render $(item.value) $(answers)
      - file.write $(content) $(dst)/$(answers.websiteDir)/$(answers.pageDir)/$(answers.fileName)
  
  - macro: docker
    title: Return a command line for running Jekyll with Docker
    ini:
      - quiet: $answers = inquire $(dockerQ) $(answers)
    steps:
      - log sudo docker run --name $(answers.container) -v $PWD:/srv/jekyll -p 4000:4000 -it --rm $(answers.image) bash -c 'bundle update && bundle exec jekyll clean && bundle exec jekyll s --host 0.0.0.0 --verbose'

  - macro: tor
    title: Return how to create a Tor service
    ini:
      - quiet: $answers = inquire $(torQ) $(answers)
    dataset:
      - var: content
      - const: tmpl
        value: |
          # (1) add this configuration to /etc/tor/torrc
          HiddenServiceDir /var/lib/tor/hidden_service_{{torServiceName}}
          HiddenServicePort {{torServicePort}} {{host}}:{{port}}

          # (2) restart the service
          sudo service tor restart
          service tor status

          # (3) query the onion domain
          sudo cat /var/lib/tor/hidden_service_{{torServiceName}}/hostname

          # (4) query website
          brave --incognito --tor http://`sudo cat /var/lib/tor/hidden_service_{{torServiceName}}/hostname`:{{torServicePort}}
    steps:
      - quiet: $content = hbs.render $(tmpl) $(answers)
      - log $(content)
